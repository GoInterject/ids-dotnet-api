{
    "New controller using Inteject Request Handler": {
        "prefix": "c-pipe",
        "body": [
            "using Interject.Classes;",
            "using Interject.Models;",
            "using Microsoft.AspNetCore.Mvc;",
            "using Microsoft.Data.SqlClient;",
            "using System;",
            "using System.Collections.Generic;",
            "using System.Data;",
            "using System.Linq;",
            "using System.Threading.Tasks;",
            "",
            "namespace Interject.API",
            "{",
            "    [ApiController]",
            "    [Route(\"api/v1/[controller]\")]",
            "    public class ${1}Controller : ControllerBase",
            "    {",
            "        private readonly InterjectRequestHandler _requestHandler;",
            "        public ${1}Controller() { }",
            "",
            "        /// <summary>",
            "        /// ",
            "        /// </summary>",
            "        /// <param name=\"interjectRequestDTO\">",
            "        /// The <see cref=\"InterjectRequestDTO\"/> object to process.",
            "        /// </param>",
            "        [HttpPost]",
            "        [ProducesResponseType(typeof(InterjectResponseDTO), 200)]",
            "        public async Task<InterjectResponseDTO> Post([FromBody] InterjectRequestDTO interjectRequestDTO)",
            "        {",
            "            var handler = new InterjectRequestHandler(interjectRequestDTO);",
            "            handler.ParameterConverter = new ${1}ParameterConverter();",
            "            // handler.DataConnection = new ${1}DataConnection();",
            "            handler.DataConnectionAsync = new ${1}DataConnectionAsync();",
            "            handler.ResponseConverter = new ${1}ResponseConverter();",
            "            // return handler.ReturnResponse();",
            "            return await handler.ReturnResponseAsync();",
            "        }",
            "",
            "        public class ${1}ParameterConverter : IParameterConverter",
            "        {",
            "            public void Convert(List<RequestParameter> inputParameters, List<object> outputParameters)",
            "            {",
            "                throw new NotImplementedException();",
            "            }",
            "        }",
            "",
            "        public class ${1}DataConnectionAsync : IDataConnectionAsync",
            "        {",
            "            public async Task FetchDataAsync(InterjectRequestHandler handler)",
            "            {",
            "                throw new NotImplementedException();",
            "            }",
            "        }",
            "",
            "        // public class ${1}DataConnection : IDataConnection",
            "        // {",
            "        //     public void FetchData(InterjectRequestHandler handler)",
            "        //     {",
            "        //         throw new NotImplementedException();",
            "        //     }",
            "        // }",
            "",
            "        public class ${1}ResponseConverter : IResponseConverter",
            "        {",
            "            public void Convert(InterjectRequestHandler handler)",
            "            {",
            "                throw new NotImplementedException();",
            "            }",
            "        }",
            "    }",
            "}"
        ],
        "description": "Adds the scaffolding of a controller with the Interject Request Pipeline.",
    },
    "New controller using Interject Request Parameters": {
        "prefix": "c-param",
        "body": [
            "using Interject.Classes;",
            "using Interject.Models;",
            "using Microsoft.AspNetCore.Mvc;",
            "using Microsoft.Data.SqlClient;",
            "using System;",
            "using System.Collections.Generic;",
            "using System.Data;",
            "using System.Linq;",
            "using System.Threading.Tasks;",
            "",
            "namespace Interject.API",
            "{",
            "    [ApiController]",
            "    [Route(\"api/v1/[controller]\")]",
            "    public class ${1}Controller : ControllerBase",
            "    {",
            "        private readonly InterjectRequestHandler _requestHandler;",
            "        public ${1}Controller()",
            "        {",
            "        }",
            "",
            "        /// <summary>",
            "        /// ",
            "        /// </summary>",
            "        /// <param name=\"interjectRequestDTO\">",
            "        /// The <see cref=\"InterjectRequestDTO\"/> object to process.",
            "        /// </param>",
            "        [HttpPost]",
            "        [ProducesResponseType(typeof(InterjectResponse), 200)]",
            "        public async Task<InterjectResponse> Post([FromBody] InterjectRequestDTO interjectRequest)",
            "        {",
            "            ",
            "        }",
            "}",
        ],
        "description": "Adds the scaffolding of a controller directly accessing Interject Request Parameters."
    }
}